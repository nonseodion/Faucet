{
	"compiler": {
		"version": "0.4.26+commit.4563c3fc"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "am1",
						"type": "uint256"
					},
					{
						"name": "am2",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "superfun",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "htmlCoin",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "addressCooler",
				"outputs": [
					{
						"name": "intialTimeToday",
						"type": "uint256"
					},
					{
						"name": "drips",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "drip",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "am1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "am2",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "Drip",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"Faucet.sol": "Faucet"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Faucet.sol": {
			"keccak256": "0xa3da3f25aa6f424df8fb94cdad2f2bd11bef38ebeac9d271406194502c12c33a",
			"urls": [
				"bzzr://325e49bc1a0d4e8085a820f0ba1a598667d2b8b04f7993e9c01a3a1f272464fa"
			]
		},
		"Ownable.sol": {
			"keccak256": "0x303d18dcdb6461a0768b0714b825a7d514f7b4f85227357bc1bf55404d8749f9",
			"urls": [
				"bzzr://d9e68c11b553f970497f537a0839c645a072c5f909a10a2107b4ef62f2963f5a"
			]
		},
		"SafeMath.sol": {
			"keccak256": "0x07c487f7de0020663acb608167c0ed07b3c6c690598da9f82005bc8e413637aa",
			"urls": [
				"bzzr://5f247387780c8842eac342ca2d7d4d93989e6fe869d3ea134791caebebf3c2f1"
			]
		},
		"Token.sol": {
			"keccak256": "0x8afbf62015bbd23d26d93e9401ed8d8936cafd008b18a367f09d0f731fde4c92",
			"urls": [
				"bzzr://e884a7878f7279951789b3c0ff949745beb81ff4cf086399a47d444e206b0103"
			]
		}
	},
	"version": 1
}